buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'checkstyle'
apply plugin: 'war'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

version = '0.1-SNAPSHOT'

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

ext {
    springBootVersion = '1.4.0.RELEASE'
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")

    compile("org.apache.tomcat.embed:tomcat-embed-jasper:9.0.0.M9")
    compile("javax.servlet:jstl:1.2")

    runtime("org.apache.derby:derby:10.12.1.1")
//
//    compile('org.apache.logging.log4j:log4j-api:2.1')
//    compile('org.apache.logging.log4j:log4j-core:2.1')

    testCompile('org.codehaus.groovy:groovy-all:2.3.10')
    testCompile('org.spockframework:spock-core:1.0-groovy-2.3')

    // integrationTestCompile('')
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

checkstyle {
    toolVersion = "6.5"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
