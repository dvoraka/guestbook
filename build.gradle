buildscript {
    ext {
        springBootVersion = '2.0.0.M7'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
//    id 'org.springframework.boot' version '1.5.9.RELEASE'
    id "com.github.spotbugs" version "1.6.0"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = '1.9'
targetCompatibility = '1.9'

version = '0.1-SNAPSHOT'

sourceSets {
    integrationTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/groovy')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencyManagement {
    imports {
    }
}

dependencies {
    // Spring
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    // Spring dev tools
    compile("org.springframework.boot:spring-boot-devtools")

    runtime('javax.xml.bind:jaxb-api:2.3.0')

    // Testing
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
    testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
    // Groovy version for test compilation
    testCompile 'org.codehaus.groovy:groovy-all:2.4.13'

    // PostgreSQL
    runtime('org.postgresql:postgresql')
    // Embedded database
    runtime('org.apache.derby:derby')
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all"
}

checkstyle {
    sourceSets = [sourceSets.main]

    ignoreFailures = false
}

spotbugs {
    effort = 'max'
    reportLevel = 'high'

    sourceSets = [sourceSets.main]

//    includeFilter = file("findbugs-exclude.xml")

    ignoreFailures = false
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    sourceSets = [sourceSets.main]

    ignoreFailures = false
}

jacoco {
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
check.dependsOn jacocoTestReport
